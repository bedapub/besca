.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_tools_plot_reclustering_function.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_tools_plot_reclustering_function.py:


reclustering on specific louvain clusters
=========================================

This example demonstrates who to perform a reclustering on a selected subset of
louvain clusters. You will want to do this for example during the process of celltype
annotation, when the louvain clusters do not have a sufficient resolution to seperate
all clusters and mixed cell populations still exist.





.. image:: /auto_examples/tools/images/sphx_glr_plot_reclustering_function_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    In total 1471 highly variable genes selected within cluster
    NOTE: overwriting labels for the selected cells saved in adata.obs.new_label with the new labels
    CD4 T-cell          866
    CD8 T-cell          427
    CD14+ monocyte      369
    B-cell              259
    FCGR3A+ monocyte    177
    NK cell             162
    pDC                  19
    Name: celltype, dtype: int64




|


.. code-block:: python


    import besca as bc
    import scanpy.api as sc

    #load and preprocess data (here we will start from a preprocessed dataset)
    adata = bc.datasets.pbmc3k_processed()

    #extract subset using the recluster function whcih is part of the reclustering (rc) toolkit
    adata_subset = bc.tl.rc.recluster(adata, celltype=('0', '1', '3', '6'), celltype_label = 'louvain', resolution = 1.3)

    #visualize the new clusters
    sc.pl.umap(adata_subset, color = ['louvain', 'CD3G', 'CD8A', 'CD4', 'IL7R', 'NKG7', 'GNLY'])

    #append new celltype labels to the subclusters
    new_labels = ["CD4 T-cell", #0
                  "CD4 T-cell", #1
                  "CD4 T-cell", #2
                  "CD8 T-cell", #3
                  "NK cell", #4
                  "CD8 T-cell", #5
                  "CD8 T-cell",#6
                  "CD4 T-cell", #7
                  "CD4 T-cell", #8
                  "CD4 T-cell", #9
                  "CD4 T-cell"] #10

    #merge the labels back into the original adata object
    #note this will overwrite what ever was saved in adata.obs.celltype
    bc.tl.rc.annotate_new_cellnames(adata, adata_subset, names=new_labels, new_label = 'celltype')

    print(adata.obs.celltype.value_counts())

**Total running time of the script:** ( 0 minutes  16.113 seconds)


.. _sphx_glr_download_auto_examples_tools_plot_reclustering_function.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_reclustering_function.py <plot_reclustering_function.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_reclustering_function.ipynb <plot_reclustering_function.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
